Ci viene richiesto di ricontrollare il progetto, data la mancata identificazione delle mani quando si testa il detector con la webcam: cogliamo quindi l'occasione per caricare un progetto "pulito" su GitHub, aprendo a diverse configurazioni che portino al risultato sperato.
Ci poniamo l'obiettivo di testare diversi modelli 3D di mano, tenendo come ultima opzione uno scan 3D di una mano reale (in quanto risulterebbe il meno adattabile a sviluppi futuri, essendo poco astratto), cercandone uno che renda il progetto funzionante e pronto per la consegna.
Iniziamo col copiare sul nostro spazio GitHub "tesi" la cartella models nella sua versione necessaria per il funzionamento del progetto illustrato nel video (TF1.8) (git clone https://github.com/tensorflow/models.git) e eseguiamo, nell'ambiente Anaconda sul quale avevamo già installato in precedenza tutti i programmi necessari, python setup.py build e python setup.py install dalla cartella models\research, per poi spostarci in slim e eseguire pip install -e . . Testando l'intallazione da models\research col comando python object_detection/builders/model_builder_test.py, tutto sembra funzionare.
Procediamo quindi con la clonazione del progetto Unity col comando git clone https://github.com/MatthewHallberg/SyntheticDataGenerator.git e scarichiamo un migliaio (1020) di immagini random in SyntheticDataGenerator\Assets\Resources\Textures tramite l'estensione Chrome Fatkun. Aggiungiamo inoltre il modello 3D di mano utilizzato in precedenza, aspettando che Brumana carichi tutti quelli recuperati nel pomeriggio una volta che tutto sarà pushato su GitHub.
Arrivato il momento di aprire il progetto con Unity, installiamo la stessa versione di Unity con la quale il progetto è stato realizzato (2019.2.0f1).
Creiamo l'oggetto hand (usando il modello 3D "default" di mano utilizzato nell'iterazione precedente del progetto), modifichiamo i file indicati nel video di modo da adattare il progetto alle nostre necessità e generiamo 2000 immagini, l'80% delle quali sarà utilizzato per il training e il 20% delle quali sarà utilizzato per il testing.
Spostiamo UnityStuff da SyntheticDataGenerator/Assets/StreamingAssets a models/research.
Abbiamo inoltre modificato il file ObjectDetectionNotes presente in UnityStuff/TFUtils di modo che contenga solo le istruzioni necessarie ai nostri scopi, per evitare confusione.

